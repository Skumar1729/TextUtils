{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","htmlfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","Components_Alert","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.4b1bb76c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          </li>\r\n          \r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes={title:PropTypes.string,\r\n                  aboutText:PropTypes.string}\r\n\r\n                  Navbar.defaultProps = {\r\n                    title: \"Cosmos here\",\r\n                    aboutText:\"About text here\"\r\n                  };\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\", \"Success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText= text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\", \"Success\");\r\n    }\r\n    const handleCopy = ()=>{\r\n       var text=document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"Text copied\", \"Success\");\r\n    }\r\n   \r\n    const handleClearClick = ()=>{\r\n        let newText= '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"Success\");\r\n    }\r\n\r\n    const handleExtraSpaces =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed\", \"Success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n       setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className = \"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style = {{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy to Clipboard</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n    <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport About from './Components/About';\nimport Alert from './Components/Alert';\n\n\nlet name=\"Sanjay\";\nfunction App() {\n  const [mode, setMode]=useState('light');\n  const [alert, setAlert]=useState(null); \n  const showAlert=(message, type)=>{\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(()=>{\n          setAlert(null);\n        },1500)\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#042743';\n    showAlert(\"Dark Mode has been enabled\", \"Success\");\n  } \n  else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"Light Mode has been enabled\", \"Success\"); \n  }\n}\n  \n  return (\n   <>\n  <Navbar title=\"TextUtils\" aboutText=\"About us\" mode={mode} toggleMode={toggleMode} />\n  <Alert alert={alert}/>\n  <div className=\"container my-3\">\n  <TextForm showAlert={showAlert} heading = \"Enter text here\" mode={mode}/>\n  {/* <About/> */}\n   </div>\n  </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}